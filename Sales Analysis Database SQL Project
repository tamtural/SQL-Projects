/* 
Created by: Tamarl Christie
Objectve: To create a database to analyze customer and sales data for a Furniture Company.
Date: 11/2023
*/


DROP DATABASE IF EXISTS PVFC;
CREATE DATABASE PVFC;
USE PVFC;

DROP TABLE IF EXISTS Customer_T;
CREATE TABLE Customer_T
	(CustomerID INTEGER(11) NOT NULL,
	CustomerName VARCHAR(25) NOT NULL,
	CustomerAddress VARCHAR(30),
	CustomerCity VARCHAR(20),
	CustomerState CHAR(2),
	CustomerPostalCode VARCHAR(9),
	PRIMARY KEY (CustomerID));

DROP TABLE IF EXISTS Order_T;
CREATE TABLE Order_T
	(OrderID INTEGER(11) NOT NULL,
	OrderDate DATE,
	CustomerID INTEGER(11),
	SalespersonID INTEGER(11),
	PRIMARY KEY (OrderID),
	FOREIGN KEY (CustomerID) REFERENCES Customer_T(CustomerID));

DROP TABLE IF EXISTS Product_T;
CREATE TABLE Product_T
	(ProductID INTEGER(11) NOT NULL,
	ProductDesc VARCHAR(50),
	ProductFinish VARCHAR(20),
	ProductStandardPrice DECIMAL(6,2),
	ProductLineID INTEGER(11),
	PRIMARY KEY (ProductID));

DROP TABLE IF EXISTS OrderLine_T;
CREATE TABLE OrderLine_T
	(OrderID INTEGER(11) NOT NULL,
	ProductID INTEGER(11) NOT NULL,
	OrderedQuantity INTEGER(11),
	PRIMARY KEY (OrderID, ProductID),
	FOREIGN KEY (OrderID) REFERENCES Order_T(OrderID),
	FOREIGN KEY (ProductID) REFERENCES Product_T(ProductID));

DROP TABLE IF EXISTS Salesperson_T;
CREATE TABLE Salesperson_T
	(SalespersonID INTEGER(11) NOT NULL,
	SalespersonName VARCHAR(50),
	SalespersonTelephone VARCHAR(20),
	SalespersonFax VARCHAR(20),
	PRIMARY KEY (SalespersonID));

INSERT INTO Customer_T
VALUES
(1, 'Contemporary Casuals', '1355 S Hines Blvd', 'Gainesville', 'FL','326012871'),
(2, 'Value Furniture', '15145 S.W. 17th St.', 'Plano', 'TX','750947743'),
(3, 'Home Furnishings', '1900 Allard Ave.', 'Albany', 'NY', '122091125'),
(4, 'Eastern Furniture', '1925 Beltline Rd.', 'Carteret', 'NJ','070083188'),
(5, 'Impressions', '5585 Westcott Ct.', 'Sacramento', 'CA', '942064056'),
(6, 'Furniture Gallery', '325 Flatiron Dr.', 'Boulder', 'CO','805144432'),
(7, 'Period Furniture', '394 Rainbow Dr.', 'Seattle', 'WA', '979545589'),
(8, 'California Classics', '816 Peach Rd.', 'Santa Clara', 'CA','969157754'),
(9, 'M and H Casual Furniture', '3709 First Street', 'Clearwater', 'FL','346202314'),
(10, 'Seminole Interiors', '2400 Rocky Point Dr.', 'Seminole', 'FL','346464423'),
(11, 'American Euro Lifestyles', '2424 Missouri Ave N.', 'Prospect Park','NJ', '075085621'),
(12, 'Battle Creek Furniture', '345 Capitol Ave. SW', 'Battle Creek','MI', '490153401'),
(13, 'Heritage Furnishings', '66789 College Ave.', 'Carlisle', 'PA','170138834'),
(14, 'Kaneohe Homes', '112 Kiowai St.', 'Kaneohe', 'HI', '967442537'),
(15, 'Mountain Scenes', '4132 Main Street', 'Ogden', 'UT', '844034432');

INSERT INTO Order_T
VALUES
(1001, '2010-10-21 00:00:00', 1, 1),
(1002, '2010-10-21 00:00:00', 8, 2),
(1003, '2010-10-22 00:00:00', 15, 1),
(1004, '2010-10-22 00:00:00', 5, 3),
(1005, '2010-10-24 00:00:00', 3, 2),
(1006, '2010-10-24 00:00:00', 2, 3),
(1007, '2010-10-27 00:00:00', 11, 4),
(1008, '2010-10-30 00:00:00', 12, 5),
(1009, '2010-11-05 00:00:00', 4, 5),
(1010, '2010-11-05 00:00:00', 1, 2);

INSERT INTO Product_T
VALUES
(1, 'End Table', 'Cherry', 175.0000, 1),
(2, 'Coffe Table', 'Natural Ash', 200.0000, 2),
(3, 'Computer Desk', 'Natural Ash', 375.0000, 2),
(4, 'Entertainment Center', 'Natural Maple', 650.0000, 3),
(5, 'Writers Desk', 'Cherry', 325.0000, 1),
(6, '8-Drawer Desk', 'White Ash', 750.0000, 2),
(7, 'Dining Table', 'Natural Ash', 800.0000, 2),
(8, 'Computer Desk', 'Walnut', 250.0000, 3);

INSERT INTO OrderLine_T
VALUES
(1001, 1, 2),
(1001, 2, 2),
(1001, 4, 1),
(1002, 3, 5),
(1003, 3, 3),
(1004, 6, 2),
(1004, 8, 2),
(1006, 7, 2),
(1006, 5, 2),
(1006, 4, 1);

/*
ALTER table Customer_T
ADD column CustomerType varchar(10) default "Commercial";
*/

/*
ALTER table Customer_T
ALTER column CustomerType Drop default;
*/

/*
INSERT INTO Customer_T 
VALUES(16, 'Morgan Furniture', '990 NE 160 St.', 'Miami Beach', 'FL', '012210012');
*/

/*
ALTER table Customer_T
DROP column Customer_Type;
*/

/* Display average ProductStandardPrice of each ProductLine */
SELECT ProductLineID, AVG(ProductStandardPrice) AS AvgPrice
FROM Product_T
GROUP BY ProductLineID;

/*Display CustomerState and Number of customers from that state for states which have more than one customers*/
SELECT CustomerState, Count(CustomerID) as NCustomers
From Customer_T
Group By CustomerState
Having Count(CustomerID)> 1;

/* Display the order number and the total value of products purchased for the largest value order*/
select OL.OrderID, Sum(OL.OrderedQuantity * P.ProductStandardPrice) as TotalValue
from Product_T  as P, OrderLine_T as OL, Order_T as O
where P.ProductID = OL.ProductID 
and OL.OrderID = O.OrderID
group by OL.OrderID
order by TotalValue desc
limit 1;

/* Display the name and address of the customer who place more than one order with the number of orders placed as Norders*/
select C.CustomerName, C.CustomerAddress, count(distinct OrderID) as Norders
from Customer_T as C
inner join Order_T as O
on C.CustomerID = O.CustomerID
group by C.CustomerID
having Norders >1;


/* Display the SalespersonID and the number of distinct customersâ€™ orders they have handled*/
select SalespersonID, count(distinct CustomerID) as Nuniquecustomer
from Order_T
group by SalespersonID;


/* Display total sales of products by productline which have been ordered in at least 4 distinct orders*/
select P.ProductLineID, sum(OL.OrderedQuantity * P.ProductStandardPrice) as TotalSales
from Product_T as P
inner join OrderLine_T as OL
on P.ProductID = OL.ProductID
group by P.ProductLineID
having count(distinct OL.OrderID) >= 4;


/* Display total sales and salespersonID in descending order (based on sales) for those salaespersons sales value greater than 4000 */
select S.SalespersonID, sum(OL.OrderedQuantity * P.ProductStandardPrice)as TotalSales
from Salesperson_T as S, OrderLine_T as OL, Product_T as P, Order_T as O
where Ol.ProductID = P.ProductID
and  O.SalespersonID = S.SalespersonID
and O.OrderID = OL.OrderID
group by S.SalespersonID
having TotalSales > 4000
order by TotalSales desc;


/* Display total sales per productlinID for each salesperson */
select O.SalespersonID, P.ProductLineID, sum(OL.OrderedQuantity*P.ProductStandardPrice) as TotalSalesPerLine
from Orderline_T as OL, Product_T as P, Order_T as O
where O.OrderID = OL.OrderID AND OL.ProductID = P.ProductID
group by P.ProductLineID, O.SalespersonID;


/* Display salespersonID of the salespersons who get more than average number of orders by salespersons */
select SalespersonID, COUNT(*) as Norder
from Order_T
group by SalespersonID
having COUNT(*) >
(select avg(Norder)
from
(select SalespersonID, COUNT(*) as Norder
from Order_T
group by SalespersonID) as AvgNorder_T); 

/* Display ProductLineID and the number of products ordered in it */
select  P.ProductLineID, Count(*)
from Product_T as P
group by P.ProductLineID;
